<?xml version="1.0" encoding="utf-8"?>
<dialect name='SimpleSqream'
         class='sqream_jdbc'
         base='SQLServer10Dialect_Datetime2'
         version='18.1'>
   <function-map>
  <!--
      function
      Group: Tableau function group. Multiple groups are comma-separated.
      Name: Function name
      Return-type: Tableau data type. These include bool, date, datetime,
                   int, real, spatial, str
    -->
    <function group='numeric' name='ABS' return-type='real'>
      <!--0
0        formula
        SQL expression formula. Input parameters are denoted with %1, %2, etc.
      -->
      <formula>ABS(%1)</formula>
      <!--
        argument
        One or more arguments. Data type can include bool, date, datetime,
        localint, localreal, localstr, int, real, spatial, or str.
        Local types must be literals.
      -->
      <argument type='real' />
    </function>
    <function group='numeric' name='ABS' return-type='int'>
      <formula>ABS(%1)</formula>
      <argument type='int' />
    </function>
    <function group='numeric' name='ACOS' return-type='real'>
      <formula>ACOS(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='ASIN' return-type='real'>
      <formula>ASIN(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='ATAN' return-type='real'>
      <formula>ATAN(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='ATAN2' return-type='real'>
      <formula>ATN2(%1,%2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='CEILING' return-type='real'>
      <formula>CEILING(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='CEILING' return-type='int'>
      <formula>CAST(CEIL(%1) AS BIGINT)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='CEILING' return-type='int'>
      <formula>CAST(CEIL(%1) AS BIGINT)</formula>
      <argument type='int' />
    </function>
    <function group='numeric' name='COS' return-type='real'>
      <formula>COS(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='COT' return-type='real'>
      <formula>case when %1 != 0 then  COS(%1)/SIN(%1) else NULL end </formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='DEGREES' return-type='real'>
      <formula>(%1 * 180 / PI())</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='DIV' return-type='int'>
      <formula>CASE WHEN %2 = 0 THEN NULL ELSE ( %1 / %2 ) END</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='numeric' name='EXP' return-type='real'>
      <formula>EXP(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='FLOOR' return-type='real'>
      <formula>{fn FLOOR(%1)}</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='FLOOR' return-type='int'>
      <formula>CAST(FLOOR(%1) AS BIGINT)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='FLOOR' return-type='int'>
      <formula>CAST(FLOOR(%1) AS BIGINT)</formula>
      <argument type='int' />
    </function>
	<!-- HEXBINX is a function that calculates the distance between a coaordinate and the hexagonal surrounding it X coaordinate,
	     This formulat was taken from other configorations formula
	-->
    <function group='numeric' name='HEXBINX' return-type='real'>
      <formula>(((CASE WHEN (ABS((%2) - (CAST( ( (%2) / SQRT(3.0) ) AS bigint ) * SQRT(3.0)))) + SQRT(3.0) * ((ABS((%1) - (CAST( ( (%1) / 3.0 ) AS bigint ) * 3.0))) - 1.0) &gt; 0.0 THEN 1.5 ELSE 0.0 END) - (CASE WHEN ((%1) - (CAST( ( (%1) / 3.0 ) AS bigint ) * 3.0) &lt; 0.0) AND ((CASE WHEN (ABS((%2) - (CAST( ( (%2) / SQRT(3.0) ) AS bigint ) * SQRT(3.0)))) + SQRT(3.0) * ((ABS((%1) - (CAST( ( (%1) / 3.0 ) AS bigint ) * 3.0))) - 1.0) &gt; 0.0 THEN 1.5 ELSE 0.0 END) &gt; 0.0) THEN 3.0 ELSE 0.0 END)) + (CAST( ( (%1) / 3.0 ) AS bigint ) * 3.0))</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
	<!-- HEXBINY is a function that calculates the distance between a coaordinate and the hexagonal surrounding it Y coaordinate,
	     This formulat was taken from other configorations formula
	-->
    <function group='numeric' name='HEXBINY' return-type='real'>
      <formula>round((((CASE WHEN (ABS((%2) - (( ( (%2) / SQRT(3.0) )::bigint)  * SQRT(3.0)))) + SQRT(3.0) * ((ABS((%1) - ((( (%1) / 3.0 )::bigint) * 3.0))) - 1.0) &gt; 0.0 THEN SQRT(3.0) / 2.0 ELSE 0.0 END) - (CASE WHEN ((%2) - (( ( (%2) / SQRT(3.0) )::bigint) * SQRT(3.0)) &lt; 0.0) AND ((CASE WHEN (ABS((%2) - (( ( (%2) / SQRT(3.0) )::bigint) * SQRT(3.0)))) + SQRT(3.0) * ((ABS((%1) - (( ( (%1) / 3.0 )::bigint) * 3.0))) - 1.0) &gt; 0.0 THEN SQRT(3.0) / 2.0 ELSE 0.0 END) &gt; 0.0) THEN SQRT(3.0) ELSE 0.0 END)) + (( ( (%2) / SQRT(3.0) )::bigint) * SQRT(3.0))),3)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='LN' return-type='real'>
      <formula>(CASE WHEN %1 &gt; 0 THEN LOG(%1) ELSE CAST(NULL AS DOUBLE) END)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='LOG' return-type='real'>
      <formula>CASE WHEN %1 &gt;0 THEN LOG10(%1) ELSE NULL END</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='LOG' return-type='real'>
      <formula>CASE WHEN %1 &gt; 0 AND %2 &gt; 0 AND %2 &lt;&gt; 1 THEN LOG(%1)/log(2) ELSE NULL END</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='LOG2' return-type='real'>
      <formula>(CASE WHEN %1 &gt; 0 THEN LOG(%1)/log(2) ELSE NULL END)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='MAX' return-type='real'>
      <formula>(CASE&#10;&#9;WHEN %1 IS NULL THEN NULL&#10;&#9;WHEN %2 IS NULL THEN NULL&#10;&#9;WHEN %1 &lt; %2 THEN %2&#10;&#9;ELSE %1 END)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='MAX' return-type='int'>
      <formula>(CASE&#10;&#9;WHEN (%1 IS NULL) THEN NULL&#10;&#9;WHEN (%2 IS NULL) THEN NULL&#10;&#9;WHEN (%1 > %2) THEN %1&#10;&#9;ELSE %2 END)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='numeric' name='MAX' return-type='str'>
      <formula>(CASE WHEN (%1::varchar(15) IS NULL) OR (%2::varchar(15) IS NULL) THEN NULL WHEN %1::varchar(15)&gt; %2::varchar(15) THEN %1::varchar(15) ELSE %2 END)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='numeric' name='MAX' return-type='datetime'>
      <formula>(CASE WHEN (%1 IS NULL) OR (%2 IS NULL) THEN CAST(NULL AS TIMESTAMP) WHEN CAST(%1 AS TIMESTAMP) &gt; CAST(%2 AS TIMESTAMP) THEN %1 ELSE %2 END)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='numeric' name='MAX' return-type='date'>
      <formula>(CASE WHEN (%1 IS NUll) OR (%2 IS NULL) THEN NULL WHEN TIMESTAMP(%1) &gt; TIMESTAMP(%2) THEN %1 ELSE %2 END)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='numeric' name='MIN' return-type='real'>
      <formula>(CASE&#10;&#9;WHEN %1 IS NULL OR %2 IS NULL THEN NULL&#10;&#9;WHEN %1 &lt; %2 THEN %1&#10;&#9;ELSE %2 END)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='MIN' return-type='int'>
      <formula>(CASE&#10;&#9;WHEN %1 IS NULL OR %2 IS NULL THEN NULL&#10;&#9;WHEN %1 &gt; %2 THEN %2&#10;&#9;ELSE %1 END)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='numeric' name='MIN' return-type='str'>
      <formula>(CASE WHEN (%1::varchar(15) IS NULL) OR (%2::varchar(15) IS NULL) THEN NULL WHEN %1::varchar(15) &lt; %2::varchar(15) THEN %1::varchar(15) ELSE %2 END)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='numeric' name='MIN' return-type='datetime'>
      <formula>(CASE WHEN (%1 IS NULL) OR (%2 IS NULL) THEN TIMESTAMP(NULL) WHEN %1 &lt; %2 THEN %1 ELSE %2 END)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='numeric' name='MIN' return-type='date'>
      <formula>(CASE WHEN (%1 IS NULL) OR (%2 IS NULL) THEN NULL WHEN TIMESTAMP(%1) &lt; TIMESTAMP(%2) THEN %1 ELSE %2 END)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='numeric' name='MOD' return-type='int'>
      <formula>MOD(%1,%2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='numeric' name='PI' return-type='real'>
      <formula>PI()</formula>
    </function>
    <function group='numeric' name='POWER' return-type='real'>
      <formula>POWER(%1::float,%2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='POWER' return-type='real'>
      <formula>POWER(%1,%2)</formula>
      <argument type='real' />
      <argument type='int' />
    </function>
    <function group='numeric' name='POWER' return-type='real'>
      <formula>POWER(CAST(%1 AS bigint),%2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='numeric' name='RADIANS' return-type='real'>
      <formula>RADIANS(%1::double)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='ROUND' return-type='real'>
      <formula>ROUND(%1, 0)::DOUBLE</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='ROUND' return-type='real'>
      <formula>ROUND(%1,%2)::DOUBLE</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='numeric' name='ROUND' return-type='real'>
      <formula>ROUND(CAST(%1 AS NUMERIC),%2)::DOUBLE</formula>
      <argument type='real' />
      <argument type='int' />
    </function>
    <function group='numeric' name='ROUND' return-type='int'>
      <formula>ROUND(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='SIGN' return-type='int'>
      <formula>SIGN(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='SIN' return-type='real'>
      <formula>SIN(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='SQRT' return-type='real'>
      <formula>CASE WHEN %1 &gt;= 0 THEN SQRT(%1) ELSE NULL END</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='SQUARE' return-type='real'>
      <formula>POWer(%1,2)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='SQUARE' return-type='int'>
      <formula>POWER(%1::float, 2)</formula>
      <argument type='int' />
    </function>
    <function group='numeric' name='TAN' return-type='real'>
      <formula>TAN(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='TRUNC' return-type='real'>
      <formula>TRUNC(%1)</formula>
      <argument type='real' />
    </function>
    <function group='numeric' name='XPATH_DOUBLE' return-type='real'>
      <formula>XPATH_DOUBLE(%1,%2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='numeric' name='XPATH_FLOAT' return-type='real'>
      <formula>XPATH_FLOAT(%1,%2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='numeric' name='XPATH_INT' return-type='int'>
      <formula>XPATH_INT(%1,%2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='numeric' name='XPATH_LONG' return-type='int'>
      <formula>XPATH_LONG(%1,%2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='numeric' name='XPATH_SHORT' return-type='int'>
      <formula>XPATH_SHORT(%1,%2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='numeric;logical' name='ZN' return-type='real'>
      <formula>COALESCE(%1, 0)</formula>
      <argument type='real' />
    </function>
    <function group='numeric;logical' name='ZN' return-type='int'>
      <formula>ISNULL(%1, 0)</formula>
      <argument type='int' />
    </function>
    <function group='string' name='ASCII' return-type='int'>
      <formula>ASCII(%1)</formula>
      <argument type='str' />
    </function>
    <function group='string' name='CHAR' return-type='str'>
      <formula>(CASE WHEN (%1 &gt;= 0) THEN CODE(CASE WHEN %1 &gt;=0 THEN FLOOR(%1) ELSE CEIL(%1) END) ELSE NULL END)</formula>
      <argument type='real' />
    </function>
    <function group='string' name='CHAR' return-type='str'>
      <formula>(CASE WHEN (%1 &gt;= 1) AND (%1 &lt; 127) THEN CHR(%1)::varchar(20) ELSE NULL END)</formula>
      <argument type='int' />
    </function>
    <function group='string' name='CONTAINS' return-type='bool'>
      <formula>%1 RLIKE (&apos;.*&apos; || %2 || &apos;.*&apos;)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='DOMAIN' return-type='str'>    
      <formula>NET.REG_DOMAIN(%1)</formula>
      <argument type='str' />
    </function>
    <function group='string' name='ENDSWITH' return-type='bool'>
      <formula>CASE WHEN LEN(%2) &gt;= 0 THEN %1 like '%een%' ELSE NULL END</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='FILTER_CONTAINS' return-type='bool'>
      <formula>INSTR(UCASE(%1), UCASE(%2))</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='FILTER_ENDSWITH' return-type='bool'>
      <formula>INSTR(UCASE(RIGHT(RTRIM(%1), LEN(%2))), UCASE(%2))</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='FILTER_STARTSWITH' return-type='bool'>
      <formula>INSTR(UCASE(%1), UCASE(%2))</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='FIND' return-type='int'>
      <formula>charindex(%2, %1)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='FIND' return-type='int'>
      <formula>(CASE WHEN %3 &gt;= 1 THEN   (CASE WHEN charindex(SUBSTRING(%1::varchar(25), %3::int,1),%2,1) = 0   THEN 0   ELSE charindex(SUBSTRing(%1::varchar(25),%3::int,1),%2,1) + CAST(%3 AS INTEGER) - 1 END) WHEN %3 &lt;  1 THEN charindex(%2,%1) ELSE NULL END)</formula>
      <argument type='str' />
      <argument type='str' />
      <argument type='real' />
    </function>
    <function group='string' name='FIND' return-type='int'>
      <formula>CASE&#10;WHEN %3 &lt; 1 THEN REGEXP_INSTR( %1, %2 )&#10;WHEN REGEXP_INSTR( SUBSTRING(%1, %3, LEN(%1)), %2 ) = 0 THEN 0&#10;ELSE REGEXP_INSTR( SUBSTRING(%1, %3, LEN(%1)), %2 ) + %3 - 1&#10;END&#10;</formula>
      <argument type='str' />
      <argument type='str' />
      <argument type='int' />
    </function>
    <function group='string' name='FINDNTH' return-type='int'>
      <formula>TABLEAU.FINDNTH(%1, %2, CAST(%3 AS INTEGER))</formula>
      <argument type='str' />
      <argument type='str' />
      <argument type='real' />
    </function>
    <function group='string' name='GET_JSON_OBJECT' return-type='str'>
      <formula>GET_JSON_OBJECT(%1,%2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='HOST' return-type='str'>
      <formula>HOST(%1)</formula>
      <argument type='str' />
    </function>
    <function group='string' name='LEFT' return-type='str'>
      <formula>case when floor(%2)::int &lt; 2 then null else substring(%1,1,floor(%2)::int) end</formula>
      <argument type='str' />
      <argument type='real' />
    </function>
    <function group='string' name='LEFT' return-type='str'>
      <formula>CASE WHEN %2 &gt;= 0 THEN {fn SUBSTRING(%1,1,%2)} ELSE NULL END</formula>
      <argument type='str' />
      <argument type='int' />
    </function>
    <function group='string' name='LEN' return-type='int'>
      <formula>LEN(%1)</formula>
      <argument type='str' />
    </function>
    <function group='string' name='LOWER' return-type='str'>
      <formula>LOWER(%1)</formula>
      <argument type='str' />
    </function>
    <function group='string' name='LTRIM' return-type='str'>
      <formula>LTRIM(%1)</formula>
      <argument type='str' />
    </function>
    <function group='string' name='LTRIM_THIS' return-type='str'>
      <formula>LTRIM(%1,%2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='MAX' return-type='str'>
      <formula>case when %1 > %2 or (%1 is null) then %1 else %2 end</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='MID' return-type='str'>
      <formula>&#10;(CASE WHEN (%2 IS NULL) OR %2 &lt; 1 THEN NULL&#10;      ELSE {fn SUBSTRING(%1,CAST(TRUNC(%2) AS INTEGER),{fn LEN(%1)} - (CAST(TRUNC(%2) AS INTEGER)) + 1)} END)</formula>
      <argument type='str' />
      <argument type='real' />
    </function>
    <function group='string' name='MID' return-type='str'>
      <formula>&#10;(CASE WHEN (%2 IS NULL) OR %2 &lt; 1 THEN NULL&#10;      ELSE {fn SUBSTRING(%1,%2,CHARACTER_LENGTH(%1) - (%2) + 1)} END)</formula>
      <argument type='str' />
      <argument type='int' />
    </function>
    <function group='string' name='MID' return-type='str'>
      <formula>(CASE WHEN %2 IS NULL OR %3 IS NULL THEN NULL&#10;      WHEN CAST(FLOOR(%3) AS INTEGER) &lt; 1 THEN &apos;&apos;&#10;      WHEN CAST(abs(%2) AS INTEGER) &lt; 1 THEN SUBSTRING(%1,1,CAST(FLOOR(%3) AS INTEGER))&#10;      ELSE SUBSTRING(%1, CAST(abs(%2) AS INTEGER), CAST(FLOOR(%3) AS INTEGER)) END)</formula>
      <argument type='str' />
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='string' name='MID' return-type='str'>
      <formula>&#10;(CASE WHEN (%2 IS NULL) OR (%3 IS NULL) THEN NULL&#10;      WHEN %3 &lt; 1 THEN &apos;&apos;&#10;      WHEN %2 &lt; 1 THEN {fn SUBSTRING(%1,1,%3)}&#10;      ELSE {fn SUBSTRING(%1,%2,%3)} END)</formula>
      <argument type='str' />
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='string' name='MIN' return-type='str'>
      <formula>(CASE&#10;&#9;WHEN (%1::varchar(15) IS NULL) OR (%2::varchar(15) IS NULL) THEN NULL&#10;&#9;WHEN %1::varchar(15) &lt; %2::varchar(15) THEN %1::varchar(25)&#10;&#9;ELSE %2::varchar(15) END)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='PARSE_URL' return-type='str'>
      <formula>PARSE_URL(%1,%2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='PARSE_URL_QUERY' return-type='str'>
      <formula>PARSE_URL(%1,&apos;QUERY&apos;,%2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='REGEXP_EXTRACT' return-type='str'>
      <formula>REGEXP_REPLACE( REGEXP_SUBSTR( %1, %2), %2, &apos;\1&apos;, 1, 1, &apos;c&apos; )</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='REGEXP_EXTRACT_NTH' return-type='str'>
      <formula>TABLEAU.REGEXP_EXTRACT_NTH(%1, %2, %3)</formula>
      <argument type='str' />
      <argument type='str' />
      <argument type='localint' />
    </function>
    <function group='string' name='REGEXP_MATCH' return-type='bool'>
      <formula>REGEXP_LIKE(%1, %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='REGEXP_REPLACE' return-type='str'>
      <formula>TABLEAU.REGEXP_REPLACE(%1, %2, %3, &apos;g&apos;)</formula>
      <argument type='str' />
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='REPLACE' return-type='str'>
      <formula>REPLACE(%1,%2,%3)</formula>
      <argument type='str' />
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='RIGHT' return-type='str'>
      <formula>case when len(%1)-round(%2)::int+1 > len(str0) then null else SUBSTRING(%1, LEN(%1)-round(%2)::INT+1, round(%2)::INT) end</formula>
      <argument type='str' />
      <argument type='real' />
    </function>
    <function group='string' name='RIGHT' return-type='str'>
      <formula>SUBSTRING(%1, LEN(%1)-%2+1, %2)</formula>
      <argument type='str' />
      <argument type='int' />
    </function>
    <function group='string' name='RTRIM' return-type='str'>
      <formula>RTRIM(%1)</formula>
      <argument type='str' />
    </function>
    <function group='string' name='RTRIM_THIS' return-type='str'>
      <formula>RTRIM(%1,%2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='SPACE' return-type='str'>
      <formula>(CASE WHEN CAST(%1 AS BIGINT) IS NULL THEN NULL WHEN CAST(%1 AS BIGINT) &gt;= 0 THEN SPACE(CAST(CAST(%1 AS BIGINT) AS INT)) ELSE NULL END)</formula>
      <argument type='real' />
    </function>
    <function group='string' name='SPACE' return-type='str'>
      <formula>(CASE WHEN %1 &gt;= 0 THEN {fn REPEAT(&apos; &apos;, %1)} ELSE NULL END)</formula>
      <argument type='int' />
    </function>
    <function group='string' name='SPLIT' return-type='str'>
      <argument type='str' />
      <argument type='localstr' />
      <argument type='localint' />
    </function>
    <function group='string' name='STARTSWITH' return-type='bool'>
      <formula>%2 = SUBSTRING(%1,1,len(%2))</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='string' name='TLD' return-type='str'>
      <formula>TLD(%1)</formula>
      <argument type='str' />
    </function>
    <function group='string' name='TRIM' return-type='str'>
      <formula>LTRIM(RTRIM(%1))</formula>
      <argument type='str' />
    </function>
    <function group='string' name='UPPER' return-type='str'>
      <formula>{fn UCASE(%1)}</formula>
      <argument type='str' />
    </function>
    <function group='string' name='XPATH_STRING' return-type='str'>
      <formula>XPATH_STRING(%1,%2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='cast' name='DATE' return-type='date'>
      <formula>DATEADD(second,%1*86400,'1900-01-01'::DATETIME)::DATE</formula>
      <argument type='real' />
    </function>
    <!--function group='cast' name='DATE' return-type='date'>
      <formula>DATEADD(day,'1900-01-01'::DATETIME,%1)::DATE</formula>
      <argument type='int' />
    </function-->
    <function group='cast' name='DATE' return-type='date'>
      <formula>CAST(%1 :: DATETIME AS DATE)</formula>
      <argument type='str' />
    </function>
    <function group='cast' name='DATE' return-type='date'>
      <formula>CAST(%1 AS DATE)</formula>
      <argument type='datetime' />
    </function>
    <function group='cast' name='DATE' return-type='date'>
      <formula>CAST(%1 AS DATE)</formula>
      <argument type='date' />
    </function>
    <!--function group='cast' name='DATETIME' return-type='datetime'>
      <formula>(CAST(CAST(&apos;1900-01-01&apos; AS DATE) + CAST(%1 AS INTEGER) AS TIMESTAMP) +  CAST((%1 - CAST(%1 AS INTEGER)) * 24 AS INTEGER) * INTERVAL &apos;1&apos; HOUR + CAST((%1 * 24  - CAST(%1 * 24 AS INTEGER)) * 60 AS INTEGER) * INTERVAL &apos;1&apos; MINUTE + CAST((%1 * 24 * 60  - CAST(%1 * 24 * 60 AS INTEGER)) * 60 AS DECIMAL(6)) * INTERVAL &apos;1&apos; SECOND)</formula>
      <argument type='real' />
    </function-->
    <!--function group='cast' name='DATETIME' return-type='datetime'>
      <formula>(CAST(CAST(&apos;1900-01-01&apos; AS DATE) + CAST(%1 AS INTEGER) AS TIMESTAMP))</formula>
      <argument type='int' />
    </function-->
    <function group='cast' name='DATETIME' return-type='datetime'>
      <formula>CAST (%1 AS DATETIME)</formula>
      <argument type='str' />
    </function>
    <function group='cast' name='DATETIME' return-type='datetime'>
      <formula>%1</formula>
      <argument type='datetime' />
    </function>
    <function group='cast' name='DATETIME' return-type='datetime'>
      <formula>%1 :: datetime</formula>
      <argument type='date' />
    </function>
    <function group='cast' name='FLOAT' return-type='real'>
      <formula>CASE WHEN (%1 IS NULL) THEN NULL WHEN (%1) THEN 1.0 ELSE 0.0 END</formula>
      <argument type='bool' />
    </function>
    <function group='cast' name='FLOAT' return-type='real'>
      <formula>CAST(%1 AS DOUBLE)</formula>
      <argument type='real' />
    </function>
    <function group='cast' name='FLOAT' return-type='real'>
      <formula>CAST(%1 AS DOUBLE)</formula>
      <argument type='int' />
    </function>
    <function group='cast' name='FLOAT' return-type='real'>
      <formula>(%1)</formula>
      <argument type='str' />
    </function>
    <function group='cast' name='FLOAT' return-type='real'>
      <formula>cast(datediff(day,'1900-01-01'::datetime,%1) as float)</formula>
      <argument type='datetime' />
    </function>
    <function group='cast' name='FLOAT' return-type='real'>
      <formula>CAST(datediff(day,'1900-01-01':: DATE,%1 :: DATE) AS float)</formula>
	  <argument type='date' />
    </function>
    <function group='cast' name='INT' return-type='int'>
      <formula>%1 :: int</formula>
      <argument type='bool' />
    </function>
    <function group='cast' name='INT' return-type='int'>
      <formula>CAST(TRUNC(%1) AS BIGINT)</formula>
      <argument type='real' />
    </function>
    <function group='cast' name='INT' return-type='int'>
      <formula>%1</formula>
      <argument type='int' />
    </function>
	<function group='cast' name='INT' return-type='int'>
      <formula>CAST(REGEXP_SUBSTR(%1,'-?[0-9]*') AS INTEGER)</formula>
      <argument type='str' />
    </function>
    <function group='cast' name='INT' return-type='int'>
      <formula>(TO_DAYS(%1) - 693961)</formula>
      <argument type='datetime' />
    </function>
    <function group='cast' name='INT' return-type='int'>
      <formula>CAST(datediff(day,&apos;1900-01-01&apos;,%1) AS INTEGER)</formula>
      <argument type='date' />
    </function>
    <function group='cast' name='MAKEDATE' return-type='date'>
      <formula>TABLEAU.MAKE_DATE(CAST(%1 AS INTEGER),CAST(%2 AS INTEGER),CAST(%3 AS INTEGER))</formula>
      <argument type='int' />
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='cast' name='MAKEDATETIME' return-type='datetime'>
      <formula>ADDTIME(CAST(CAST(%1 AS DATE) AS DATETIME), TIME(%2))</formula>
      <argument type='str' />
      <argument type='datetime' />
    </function>
    <function group='cast' name='MAKEDATETIME' return-type='datetime'>
      <formula>ADDTIME(CAST(CAST(%1 AS DATE) AS DATETIME), TIME(%2))</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='cast' name='MAKEDATETIME' return-type='datetime'>
      <formula>ADDTIME(CAST(%1 AS DATETIME), TIME(%2))</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='cast' name='MAKETIME' return-type='datetime'>
      <formula>(&apos;1899-12-30&apos;::date + TABLEAU.MAKE_TIME(CAST(%1 AS INTEGER),CAST(%2 AS INTEGER),CAST(%3 AS INTEGER)))</formula>
      <argument type='int' />
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='cast' name='REAL' return-type='real'>
      <formula>CAST(&apos;double&apos;, %1</formula>
      <argument type='int' />
    </function>
    <function group='cast' name='STR' return-type='str'>
      <formula>(CASE&#10;&#9;WHEN %1 = TRUE THEN &apos;1&apos;&#10;&#9;WHEN NOT %1 = TRUE THEN &apos;0&apos;&#10;&#9;ELSE CAST(NULL AS VARCHAR) END)</formula>
      <argument type='bool' />
    </function>
    <function group='cast' name='STR' return-type='str'>
      <formula>CAST(%1 AS VARCHAR(25))</formula>
      <argument type='real' />
    </function>
    <function group='cast' name='STR' return-type='str'>
      <formula>CAST(%1 AS VARCHAR(25))</formula>
      <argument type='int' />
    </function>
    <function group='cast' name='STR' return-type='str'>
      <formula>%1</formula>
      <argument type='str' />
    </function>
    <function group='cast' name='STR' return-type='str'>
      <!--formula>DATE_FORMAT(%1, &apos;%b %e %Y %l:%i%p&apos;)</formula-->
	  <!-- Fit datepart to desired unsuported format -->
	  <formula>(case when (datepart(mm,%1)::int &lt; 10) then '0' || datepart(mm,%1)::varchar(20) else datepart(mm,%1)::varchar(20) end) || '/'||
	           (case when (datepart(dd,%1)::int &lt; 10) then '0' || datepart(dd,%1)::varchar(20)
					 else datepart(dd,%1)::varchar(20) end) || '/' || 
			   datepart(yyyy,%1)::varchar(20)</formula>
      <argument type='datetime' />
    </function>
    <function group='cast' name='STR' return-type='str'>
      <formula>CAST(%1 AS VARCHAR(25))</formula>
      <argument type='date' />
    </function>
    <function group='logical' name='IFNULL' return-type='bool'>
      <formula>(CASE WHEN %1!=0 THEN 1 WHEN %1=0 THEN 0 ELSE (CASE WHEN %2!=0 THEN 1 WHEN %2=0 THEN 0 ELSE NULL END) END)=1</formula>
      <argument type='bool' />
      <argument type='bool' />
    </function>
    <function group='logical' name='IFNULL' return-type='real'>
      <formula>ISNULL(%1, %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='logical' name='IFNULL' return-type='int'>
      <formula>ISNULL(%1, %2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='logical' name='IFNULL' return-type='str'>
      <formula>ISNULL(%1, %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='logical' name='IFNULL' return-type='datetime'>
      <formula>COALESCE(%1, %2)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='logical' name='IFNULL' return-type='datetime'>
      <formula>COALESCE(%1, CAST(%2 AS TIMESTAMP))</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='logical' name='IFNULL' return-type='datetime'>
      <formula>COALESCE(CAST(%1 AS TIMESTAMP), %2)</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='logical' name='IFNULL' return-type='date'>
      <formula>CASE WHEN (%1 is null) THEN %2 ELSE %1 END</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='logical' name='IFNULL' return-type='spatial'>
      <formula>COALESCE(%1, %2)</formula>
      <argument type='spatial' />
      <argument type='spatial' />
    </function>
    <function group='logical' name='IIF' return-type='bool'>
      <formula>((%1 AND %2) OR ((NOT %1) AND %3))</formula>
      <argument type='bool' />
      <argument type='bool' />
      <argument type='bool' />
    </function>
    <function group='logical' name='IIF' return-type='real'>
      <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE NULL END)</formula>
      <argument type='bool' />
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='logical' name='IIF' return-type='real'>
      <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE %4 END)</formula>
      <argument type='bool' />
      <argument type='real' />
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='logical' name='IIF' return-type='int'>
      <formula>(CASE WHEN 1 THEN 0 WHEN NOT %1 THEN %3 ELSE NULL END)</formula>
      <argument type='bool' />
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='logical' name='IIF' return-type='int'>
      <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE %4 END)</formula>
      <argument type='bool' />
      <argument type='int' />
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='logical' name='IIF' return-type='str'>
      <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE NULL END)</formula>
      <argument type='bool' />
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='logical' name='IIF' return-type='str'>
      <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE %4 END)</formula>
      <argument type='bool' />
      <argument type='str' />
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='logical' name='IIF' return-type='datetime'>
      <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE NULL END)</formula>
      <argument type='bool' />
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='logical' name='IIF' return-type='datetime'>
      <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE %4 END)</formula>
      <argument type='bool' />
      <argument type='datetime' />
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='logical' name='IIF' return-type='date'>
      <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE NULL END)</formula>
      <argument type='bool' />
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='logical' name='IIF' return-type='date'>
      <formula>(CASE WHEN %1 THEN %2 WHEN NOT %1 THEN %3 ELSE %4 END)</formula>
      <argument type='bool' />
      <argument type='date' />
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='logical' name='IIF' return-type='spatial'>
      <formula>(CASE %1 WHEN TRUE THEN %2 WHEN FALSE THEN %3 ELSE NULL END)</formula>
      <argument type='bool' />
      <argument type='spatial' />
      <argument type='spatial' />
    </function>
    <function group='logical' name='IIF' return-type='spatial'>
      <formula>(CASE %1 WHEN TRUE THEN %2 WHEN FALSE THEN %3 ELSE %4 END)</formula>
      <argument type='bool' />
      <argument type='spatial' />
      <argument type='spatial' />
      <argument type='spatial' />
    </function>
    <function group='logical' name='YES' return-type='str'>
      <formula>(CASE WHEN %1=1 THEN 'yes' ELSE NULL END)</formula>
      <argument type='int' />
    </function>
    <function group='logical' name='ISNULL' return-type='bool'>
      <formula>((CASE WHEN %1 OR NOT %1 THEN 1 ELSE NULL END) IS NULL)</formula>
      <argument type='bool' />
    </function>
    <function group='logical' name='ISNULL' return-type='bool'>
      <formula>(%1 IS NULL)</formula>
      <argument type='real' />
    </function>
    <function group='logical' name='ISNULL' return-type='bool'>
      <formula>(%1 IS NULL)</formula>
      <argument type='str' />
    </function>
    <function group='logical' name='ISNULL' return-type='bool'>
      <formula>(%1 IS NULL)</formula>
      <argument type='datetime' />
    </function>
    <function group='logical' name='ISNULL' return-type='bool'>
      <formula>(%1 IS NULL)</formula>
      <argument type='spatial' />
    </function>
    <function group='logical' name='XPATH_BOOLEAN' return-type='bool'>
      <formula>XPATH_BOOLEAN(%1,%2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='aggregate' name='AVG' return-type='real'>
      <formula>AVG(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='AVG' return-type='real'>
      <formula>AVG(CAST(%1 AS DOUBLE))</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='int' />
    </function>
    <function group='aggregate' name='COLLECT' return-type='spatial'>
      <formula>geography::CollectionAggregate(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='spatial' />
    </function>
    <function group='aggregate' name='CORR' return-type='real'>
      <formula>CORR(%1, %2)</formula>
      <unagg-formula>CAST(NULL AS DOUBLE)</unagg-formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='aggregate' name='COUNT' return-type='int'>
      <formula>COUNT(CASE WHEN %1 THEN 0 WHEN NOT %1 THEN 0 ELSE NULL END)</formula>
      <unagg-formula>(CASE WHEN %1 THEN 1 WHEN NOT %1 THEN 1 ELSE 0 END)</unagg-formula>
      <argument type='bool' />
    </function>
    <function group='aggregate' name='COUNT' return-type='int'>
      <formula>COUNT(%1)</formula>
      <unagg-formula>(CASE WHEN (%1 IS NULL) THEN 0 ELSE 1 END)</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='COUNT' return-type='int'>
      <formula>COUNT(%1)</formula>
      <unagg-formula>(CASE WHEN (%1 IS NULL) THEN 0 ELSE 1 END)</unagg-formula>
      <argument type='str' />
    </function>
    <function group='aggregate' name='COUNT' return-type='int'>
      <formula>COUNT(%1)</formula>
      <unagg-formula>(CASE WHEN %1 IS NULL THEN 0 ELSE 1 END)</unagg-formula>
      <argument type='datetime' />
    </function>
    <function group='aggregate' name='COUNTD' return-type='int'>
      <formula>COUNT(DISTINCT (CASE WHEN %1 THEN 1 WHEN NOT %1 THEN 0 ELSE NULL END))</formula>
      <unagg-formula>(CASE WHEN %1 THEN 1 WHEN NOT %1 THEN 1 ELSE 0 END)</unagg-formula>
      <argument type='bool' />
    </function>
    <function group='aggregate' name='COUNTD' return-type='int'>
      <formula>COUNT(DISTINCT %1)</formula>
      <unagg-formula>(CASE WHEN (%1 IS NULL) THEN 0 ELSE 1 END)</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='COUNTD' return-type='int'>
      <formula>COUNT(DISTINCT %1)</formula>
      <unagg-formula>(CASE WHEN %1 IS NULL THEN 0 ELSE 1 END)</unagg-formula>
      <argument type='int' />
    </function>
    <function group='aggregate' name='COUNTD' return-type='int'>
      <formula>COUNT(DISTINCT %1)</formula>
      <unagg-formula>(CASE WHEN %1 IS NULL THEN 0 ELSE 1 END)</unagg-formula>
      <argument type='str' />
    </function>
    <function group='aggregate' name='COUNTD' return-type='int'>
      <formula>COUNT(DISTINCT %1)::bigint</formula>
      <unagg-formula>(CASE WHEN %1 IS NULL THEN 0 ELSE 1 END)</unagg-formula>
      <argument type='datetime' />
    </function>
    <function group='aggregate' name='COUNTD' return-type='int'>
      <formula>COUNT(DISTINCT %1)</formula>
      <unagg-formula>(CASE WHEN %1 IS NULL THEN 0 ELSE 1 END)</unagg-formula>
      <argument type='date' />
    </function>
    <function group='aggregate' name='COVAR' return-type='real'>
      <formula>COVAR_SAMP(%1, %2)</formula>
      <unagg-formula>NULL</unagg-formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='aggregate' name='COVARP' return-type='real'>
      <formula>COVAR_POP(%1, %2)</formula>
      <unagg-formula>CASE WHEN %1 IS NULL THEN CAST(NULL AS DOUBLE)&#10;WHEN %2 IS NULL THEN CAST(NULL AS DOUBLE)&#10;ELSE 0.0&#10; END</unagg-formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='aggregate' name='GROUP_CONCAT' return-type='str'>
      <formula>GROUP_CONCAT(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='str' />
    </function>
    <function group='aggregate' name='MAX' return-type='bool'>
      <formula>BOOL_OR(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='bool' />
    </function>
    <function group='aggregate' name='MAX' return-type='real'>
      <formula>MAX(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='MAX' return-type='int'>
      <formula>MAX(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='int' />
    </function>
    <function group='aggregate' name='MAX' return-type='str'>
      <formula>MAX(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='str' />
    </function>
    <function group='aggregate' name='MAX' return-type='datetime'>
      <formula>MAX(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='datetime' />
    </function>
    <function group='aggregate' name='MAX' return-type='date'>
      <formula>MAX(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='date' />
    </function>
    <function group='aggregate' name='MEDIAN' return-type='real'>
      <formula>MEDIAN(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='MEDIAN' return-type='int'>
      <formula>MEDIAN(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='int' />
    </function>
    <function group='aggregate' name='MIN' return-type='bool'>
      <formula>(MIN(CASE WHEN %1 THEN 1 WHEN NOT %1 THEN 0 ELSE CAST(NULL AS INTEGER) END)=1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='bool' />
    </function>
    <function group='aggregate' name='MIN' return-type='real'>
      <formula>MIN(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='MIN' return-type='int'>
      <formula>MIN(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='int' />
    </function>
    <function group='aggregate' name='MIN' return-type='str'>
      <formula>MIN(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='str' />
    </function>
    <function group='aggregate' name='MIN' return-type='datetime'>
      <formula>MIN(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='datetime' />
    </function>
    <function group='aggregate' name='MIN' return-type='date'>
      <formula>MIN(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='date' />
    </function>
    <function group='aggregate' name='PERCENTILE' return-type='real'>
      <formula>PERCENTILE_APPROX(%1, %2)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
      <argument type='localreal' />
    </function>
    <function group='aggregate' name='PERCENTILE' return-type='real'>
      <formula>PERCENTILE(%1, %2)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='int' />
      <argument type='localreal' />
    </function>
    <function group='aggregate' name='STDEV' return-type='real'>
      <formula>STDDEV_SAMP(%1)</formula>
      <unagg-formula>NULL</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='STDEVP' return-type='real'>
      <formula>(CASE WHEN COUNT(%1) &gt; 0 THEN&#10;&#9;SQRT((COUNT(%1) * SUM(POWER(%1,2)) - POWER(SUM(%1), 2) ) / (POWER(COUNT(%1),2)))&#10;&#9;ELSE NULL END)</formula>
      <unagg-formula>(CASE WHEN %1 IS NULL THEN NULL ELSE 0.0 END)</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='SUM' return-type='real'>
      <formula>SUM(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='SUM' return-type='int'>
      <formula>SUM(%1)</formula>
      <unagg-formula>%1</unagg-formula>
      <argument type='int' />
    </function>
    <function group='aggregate' name='VAR' return-type='real'>
      <formula>VARIANCE(%1)</formula>
      <unagg-formula>NULL</unagg-formula>
      <argument type='real' />
    </function>
    <function group='aggregate' name='VARP' return-type='real'>
      <formula>VAR_POP(%1)</formula>
      <unagg-formula>(CASE WHEN %1 IS NULL THEN NULL ELSE 0.0 END)</unagg-formula>
      <argument type='real' />
    </function>
    <function group='operator' name='!' return-type='bool'>
      <formula>(NOT %1)</formula>
      <argument type='bool' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 AND NOT %2 OR NOT %1 AND %2)</formula>
      <argument type='bool' />
      <argument type='bool' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 AND %2 = 0 OR NOT %1 AND %2 &lt;&gt; 0)</formula>
      <argument type='bool' />
      <argument type='int' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 &lt;&gt; %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 = 0 AND %2 OR %1 &lt;&gt; 0 AND NOT %2)</formula>
      <argument type='int' />
      <argument type='bool' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 &lt;&gt; %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(TIMESTAMP(%1) &lt;&gt; %2)</formula>
      <argument type='str' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 &lt;&gt; TIMESTAMP(%2))</formula>
      <argument type='datetime' />
      <argument type='str' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 &lt;&gt; %2)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 &lt;&gt; %2)</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 &lt;&gt; %2)</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='!=' return-type='bool'>
      <formula>(%1 &lt;&gt; %2)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='%' return-type='real'>
      <formula>(CASE WHEN %2 = 0 THEN NULL ELSE %1 - ( FLOOR ( SIGN(%1) * (%1/%2) ) * %2 * SIGN(%1) ) END)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='%' return-type='int'>
      <formula>mod(%1, abs(%2))</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='operator' name='&amp;&amp;' return-type='bool'>
      <formula>(%1 AND %2)</formula>
      <argument type='bool' />
      <argument type='bool' />
    </function>
    <function group='operator' name='*' return-type='real'>
      <formula>(%1 * %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='*' return-type='real'>
      <formula>(CAST(%1 AS FLOAT) * %2)</formula>
      <argument type='real' />
      <argument type='int' />
    </function>
    <function group='operator' name='*' return-type='real'>
      <formula>(%1 * CAST(%2 AS FLOAT))</formula>
      <argument type='int' />
      <argument type='real' />
    </function>
    <function group='operator' name='*' return-type='int'>
      <formula>(%1 * %2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='operator' name='+' return-type='real'>
      <formula>(%1 + %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='+' return-type='int'>
      <formula>(%1 + %2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='operator' name='+' return-type='str'>
      <formula>%1 || %2</formula>
	  <argument type='str' />
      <argument type='str' />
    </function>
    <function group='operator' name='+' return-type='datetime'>
      <formula>dateadd(hour,%2*24,%1)::datetime</formula>
      <argument type='datetime' />
      <argument type='real' />
    </function>
    <function group='operator' name='+' return-type='datetime'>
      <formula>DATEADD(day, %2, %1)</formula>
      <argument type='datetime' />
      <argument type='int' />
    </function>
    <!--function group='operator' name='+' return-type='datetime'>
      <formula>(%1 + %2)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function-->
    <function group='operator' name='+' return-type='datetime'>
      <formula>(DATEADD(second,%2*86400, %1::datetime))</formula>
      <argument type='date' />
      <argument type='real' />
    </function>
    <function group='operator' name='+' return-type='datetime'>
      <formula>(DATEADD(second,%2*86400,%1::datetime))</formula>
      <argument type='date' />
      <argument type='real' />
    </function>
    <function group='operator' name='+' return-type='date'>
      <formula>DATEADD(day, %2, %1)</formula>
      <argument type='date' />
      <argument type='int' />
    </function>
    <function group='operator' name='+' return-type='date'>
      <formula>(%1 + %2)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='-' return-type='real'>
      <formula>(-%1)</formula>
      <argument type='real' />
    </function>
    <function group='operator' name='-' return-type='real'>
      <formula>(%1 - %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='-' return-type='real'>
      <formula>DATEDIFF(second,%2,%1)::REAL/86400</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='-' return-type='real'>
      <formula>DATEDIFF(second,%2::DATETIME,%1)::REAL/86400</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='operator' name='-' return-type='real'>
      <formula>DATEDIFF(second,%2,%1::DATETIME)::REAL/86400</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='-' return-type='real'>
      <formula>DATEDIFF(second,%2::datetime,%1)::REAL/86400)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='-' return-type='int'>
      <formula>(-%1)</formula>
      <argument type='int' />
    </function>
    <function group='operator' name='-' return-type='int'>
      <formula>(%1 - %2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='operator' name='-' return-type='int'>
      <formula>DATEDIFF(day,%2,%1)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='-' return-type='datetime'>
      <formula>DATEADD(second,-(%2 * 86400),%1)</formula>
      <argument type='datetime' />
      <argument type='real' />
    </function>
    <function group='operator' name='-' return-type='datetime'>
      <formula>DATEADD(day,-(%2),%1)</formula>
      <argument type='datetime' />
      <argument type='int' />
    </function>
    <function group='operator' name='-' return-type='datetime'>
      <formula>DATEADD(second,-(%2 * 86400),%1)::datetime</formula>
      <argument type='date' />
      <argument type='real' />
    </function>
    <function group='operator' name='-' return-type='datetime'>
      <formula>DATEADD(second,-(%2 * 86400),%1::datetime)::datetime</formula>
      <argument type='date' />
      <argument type='real' />
    </function>
    <function group='operator' name='-' return-type='date'>
      <formula>DATEADD(day, -%2, %1)</formula>
      <argument type='date' />
      <argument type='int' />
    </function>
    <function group='operator' name='/' return-type='real'>
      <formula>(CASE WHEN %2 &lt;&gt; 0 THEN %1 / %2 END)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='/' return-type='real'>
      <formula>(CASE WHEN %2 = 0 THEN NULL ELSE %1 / %2 END)</formula>
      <argument type='real' />
      <argument type='int' />
    </function>
    <function group='operator' name='/' return-type='real'>
      <formula>(CASE WHEN %2 = 0 THEN NULL ELSE %1 / %2 END)</formula>
      <argument type='int' />
      <argument type='real' />
    </function>
    <function group='operator' name='/' return-type='real'>
      <formula>(CASE WHEN %2 = 0 THEN CAST(NULL AS FLOAT) ELSE CAST(%1 AS FLOAT) / %2 END)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>(%1 &lt; %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>(%1 &lt; %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>(TIMESTAMP(%1) &lt; %2)</formula>
      <argument type='str' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>(%1 &lt; TIMESTAMP(%2))</formula>
      <argument type='datetime' />
      <argument type='str' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>(%1 &lt; %2)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>(%1 &lt; CAST(%2 AS TIMESTAMP))</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) &lt; %2)</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&lt;' return-type='bool'>
      <formula>(%1 &lt; %2)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(%1 &lt;= %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(%1 &lt;= %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(TIMESTAMP(%1) &lt;= %2)</formula>
      <argument type='str' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(%1 &lt;= TIMESTAMP(%2))</formula>
      <argument type='datetime' />
      <argument type='str' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(%1 &lt;= %2)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(%1 &lt;= CAST(%2 AS TIMESTAMP))</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) &lt;= %2)</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&lt;=' return-type='bool'>
      <formula>(%1 &lt;= %2)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(%1 AND %2 OR NOT %1 AND NOT %2)</formula>
      <argument type='bool' />
      <argument type='bool' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(%1 AND %2 &lt;&gt; 0 OR NOT %1 AND %2 = 0)</formula>
      <argument type='bool' />
      <argument type='int' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(%1 = %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(%1 &lt;&gt; 0 AND %2 OR %1 = 0 AND NOT %2)</formula>
      <argument type='int' />
      <argument type='bool' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(%1 = %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(TIMESTAMP(%1) = %2)</formula>
      <argument type='str' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(%1 = TIMESTAMP(%2))</formula>
      <argument type='datetime' />
      <argument type='str' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(%1 = %2)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(%1 = %2::DATETIME)</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) = %2)</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='==' return-type='bool'>
      <formula>(%1 = %2)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(%1 &gt; %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(%1 &gt; %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(TIMESTAMP(%1) &gt; %2)</formula>
      <argument type='str' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(%1 &gt; TIMESTAMP(%2))</formula>
      <argument type='datetime' />
      <argument type='str' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(%1 &gt; %2)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(%1 &gt; CAST(%2 AS TIMESTAMP))</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(CAST(%1 AS TIMESTAMP) &gt; %2)</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&gt;' return-type='bool'>
      <formula>(%1 &gt; %2)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(%1 &gt;= %2)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(%1 &gt;= %2)</formula>
      <argument type='str' />
      <argument type='str' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(TIMESTAMP(%1) &gt;= %2)</formula>
      <argument type='str' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(%1 &gt;= TIMESTAMP(%2))</formula>
      <argument type='datetime' />
      <argument type='str' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(%1 &gt;= %2)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(%1 &gt;= CAST(%2 AS TIMESTAMP))</formula>
      <argument type='datetime' />
      <argument type='date' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(%1::DATETIME &gt;= %2)</formula>
      <argument type='date' />
      <argument type='datetime' />
    </function>
    <function group='operator' name='&gt;=' return-type='bool'>
      <formula>(%1 &gt;= %2)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='operator' name='^^' return-type='real'>
      <formula>(CASE WHEN %1 &lt; 0 AND TRUNC(%2) &lt;&gt; %2 THEN NULL ELSE POWER(%1::float,%2) END)</formula>
      <argument type='real' />
      <argument type='real' />
    </function>
    <function group='operator' name='^^' return-type='real'>
      <formula>(CASE WHEN %1 &lt; 0 AND FLOOR(%2) &lt;&gt; %2 THEN NULL ELSE POWER(%1::float,%2) END)</formula>
      <argument type='real' />
      <argument type='int' />
    </function>
    <function group='operator' name='^^' return-type='real'>
      <formula>POWER(%1::bigint,%2)</formula>
      <argument type='int' />
      <argument type='int' />
    </function>
    <function group='operator' name='||' return-type='bool'>
      <formula>(%1 OR %2)</formula>
      <argument type='bool' />
      <argument type='bool' />
    </function>
    <function group='date' name='NOW' return-type='datetime'>
      <formula>CURRENT_TIMESTAMP()</formula>
    </function>
    <function group='date' name='TODAY' return-type='date'>
      <formula>CAST(CURRENT_TIMESTAMP() AS TIMESTAMP)</formula>
    </function>
    <function group='date' name='DAY' return-type='int'>
      <formula>CAST(TRUNC(EXTRACT(DAY FROM %1)) AS INTEGER)</formula>
      <argument type='datetime' />
    </function>
    <function group='date' name='DAY' return-type='int'>
      <formula>CAST(TRUNC(EXTRACT(DAY FROM %1)) AS INTEGER)</formula>
      <argument type='date' />
    </function>
    <function group='date' name='ISDATE' return-type='bool'>
      <formula>(CAST(%1 AS DATE) IS not NULL)</formula>
      <argument type='str' />
    </function>
    <function group='date' name='MAX' return-type='datetime'>
      <formula>(CASE&#10;&#9;WHEN (%1 IS NULL) THEN NULL&#10;&#9;WHEN (%2 IS NULL) THEN NULL&#10;&#9;ELSE GREATEST(%1, %2) END)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='date' name='MAX' return-type='date'>
      <formula>(CASE&#10;&#9;WHEN %1 IS NULL OR %2 IS NULL THEN NULL&#10;&#9;WHEN %1 &gt; %2 THEN %1&#10;&#9;ELSE %2 END)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='date' name='MIN' return-type='datetime'>
      <formula>(CASE&#10;&#9;WHEN %1 IS NULL OR %2 IS NULL THEN NULL&#10;&#9;WHEN %1 &lt; %2 THEN %1&#10;&#9;ELSE %2 END)</formula>
      <argument type='datetime' />
      <argument type='datetime' />
    </function>
    <function group='date' name='MIN' return-type='date'>
      <formula>(CASE&#10;&#9; WHEN (%1 IS NULL) OR (%2 IS NULL) THEN NULL&#10;&#9;WHEN %1 &lt; %2 THEN %1&#10;&#9;ELSE %2 END)</formula>
      <argument type='date' />
      <argument type='date' />
    </function>
    <function group='date' name='MONTH' return-type='int'>
      <formula>DATEPART(month,%1)</formula>
      <argument type='datetime' />
    </function>
    <function group='date' name='MONTH' return-type='int'>
      <formula>extract (month from %1)</formula>
      <argument type='date' />
    </function>
    <function group='date' name='TIMESTAMP_TO_USEC' return-type='int'>
      <formula>UNIX_SECONDS(CAST(%1 AS TIMESTAMP))</formula>
      <argument type='datetime' />
    </function>
    <function group='date' name='USEC_TO_TIMESTAMP' return-type='datetime'>
      <formula>TIMESTAMP_SECONDS(%1)</formula>
      <argument type='int' />
    </function>
    <function group='date' name='YEAR' return-type='int'>
      <formula>CASE WHEN %1 IS NULL THEN CAST(NULL AS INTEGER) ELSE CAST(EXTRACT(YEAR FROM %1) AS INTEGER) END</formula>
      <argument type='datetime' />
    </function>
    <function group='date' name='YEAR' return-type='int'>
      <formula>EXTRACT (YEAR FROM %1)</formula>
      <argument type='date' />
    </function>

    <!--
      date-function
      Doesn't require a group. Can contain multiple formulas
      for different date parts. If a part-specific formula is missing, Tableau
      will use the generic (no part attribute) formula.
    -->
    <date-function name='DATEADD' return-type='datetime'>
      <formula>DATEADD(%1,%2::INT,%3)</formula>
      <formula part='year'>DATEADD(%1,%2::INT,%3)</formula>
      <formula part='quarter'>DATEADD(%1,%2::INT,%3)</formula>
      <formula part='month'>DATEADD(%1,%2::INT,%3)</formula>
      <formula part='dayofyear'>DATEADD(day,%2::INT,%3)</formula>
      <formula part='day'>DATEADD(%1,%2::INT,%3)</formula>
      <formula part='weekday'>DATEADD(day,%2::INT,%3)</formula>
      <formula part='week'>DATEADD(%1,%2::INT,%3)</formula>
      <formula part='hour'>DATEADD(%1,%2::INT,%3)</formula>
      <formula part='minute'>DATEADD(%1,%2::INT,%3)</formula>
      <formula part='second'>DATEADD(%1,%2::INT,%3)</formula>
      <argument type='localstr' />
      <argument type='real' />
      <argument type='datetime' />
    </date-function>
    <date-function name='DATEADD' return-type='datetime'>
      <formula>DATEADD(%1,%2::INT,%3)</formula>
      <formula part='year'>DATEADD(%1,%2::INT,%3)</formula>
      <formula part='quarter'>DATEADD(%1,%2,%3)</formula>
      <formula part='month'>DATEADD(%1,%2::INT,%3)</formula>
      <formula part='dayofyear'>DATEADD(day,%2::INT,%3)</formula>
      <formula part='day'>DATEADD(%1,%2::INT,%3)</formula>
      <formula part='weekday'>DATEADD(day,%2::INT,%3)</formula>
      <formula part='week'>DATEADD(%1,%2::INT,%3)</formula>
      <formula part='hour'>DATEADD(%1,%2,%3)</formula>
      <formula part='minute'>DATEADD(%1,%2::INT,%3)</formula>
      <formula part='second'>DATEADD(%1,%2::INT,%3)</formula>
      <argument type='localstr' />
      <argument type='int' />
      <argument type='datetime' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
      <formula part='year'>DATEDIFF(%1,%2,%3)</formula>
      <formula part='quarter'>DATEDIFF(%1,%2,%3)</formula>
      <formula part='month'>DATEDIFF(%1,%2,%3)</formula>
      <formula part='dayofyear'>DATEDIFF(day,%2,%3)</formula>
      <formula part='day'>DATEDIFF(%1,%2,%3)</formula>
      <formula part='weekday'>DATEDIFF(day,%2,%3)</formula>
      <formula part='week'>DATEDIFF(week,%2,%3)</formula>
      <formula part='hour'>DATEDIFF(%1,%2,%3)</formula>
      <formula part='minute'>DATEDIFF(%1,%2,%3)</formula>
      <formula part='second'>DATEDIFF(%1,%2,%3)</formula>
      <argument type='localstr' />
      <argument type='datetime' />
      <argument type='datetime' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
      <formula part='year'>DATEDIFF(year,%2,%3)</formula>
      <formula part='quarter'>DATEDIFF(quarter,%2,%3)</formula>
      <formula part='month'>DATEDIFF(month,%2,%3)</formula>
      <formula part='dayofyear'>DATEDIFF(dayofyear,%2,%3)</formula>
      <formula part='day'>DATEDIFF(day,%2,%3)</formula>
      <formula part='weekday'>DATEDIFF(day,%2,%3)</formula>
      <formula part='week'>DATEDIFF(week,%2,%3)</formula>
      <formula part='hour'>DATEDIFF(hour,%2,%3)</formula>
      <formula part='minute'>DATEDIFF(minute,%2,%3)</formula>
      <formula part='second'>DATEDIFF(second,%2,%3)</formula>
      <argument type='localstr' />
      <argument type='datetime' />
      <argument type='date' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
      <formula part='year'>DATEDIFF(year,%2,%3)</formula>
      <formula part='quarter'>DATEDIFF(quarter,%2,%3)</formula>
      <formula part='month'>DATEDIFF(month,%2,%3)</formula>
      <formula part='dayofyear'>DATEDIFF(dayofyear,%2,%3)</formula>
      <formula part='day'>DATEDIFF(day,%2,%3)</formula>
      <formula part='weekday'>DATEDIFF(day,%2,%3)</formula>
      <formula part='week'>DATEDIFF(week,%2,%3)</formula>
      <formula part='hour'>DATEDIFF(hour,%2,%3)</formula>
      <formula part='minute'>DATEDIFF(minute,%2,%3)</formula>
      <formula part='second'>DATEDIFF(second,%2,%3)</formula>
      <argument type='localstr' />
      <argument type='date' />
      <argument type='datetime' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
      <formula part='year'>DATEDIFF(year,%2,%3)</formula>
      <formula part='quarter'>DATEDIFF(quarter,%2,%3)</formula>
      <formula part='month'>DATEDIFF(month,%2,%3)</formula>
      <formula part='dayofyear'>DATEDIFF(dayofyear,%2,%3)</formula>
      <formula part='day'>DATEDIFF(day,%2,%3)</formula>
      <formula part='weekday'>DATEDIFF(day,%2,%3)</formula>
      <formula part='week'>DATEDIFF(week,%2,%3)</formula>
      <formula part='hour'>DATEDIFF(hour,%2,%3)</formula>
      <formula part='minute'>DATEDIFF(minute,%2,%3)</formula>
      <formula part='second'>DATEDIFF(second,%2,%3)</formula>
      <argument type='localstr' />
      <argument type='date' />
      <argument type='date' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
      <!--formula>DATEDIFF(%1,%2,%3)</formula-->
      <formula part='year'>DATEDIFF(year,%2,%3)</formula>
      <formula part='quarter'>DATEDIFF(quarter,%2,%3)</formula>
      <formula part='month'>DATEDIFF(month,%2,%3)</formula>
      <formula part='dayofyear'>DATEDIFF(dayofyear,%2,%3)</formula>
      <formula part='day'>DATEDIFF(day,%2,%3)</formula>
      <formula part='weekday'>DATEDIFF(day,%2,%3)</formula>
      <formula part='week'>DATEDIFF(week,%2,%3)</formula>
      <formula part='hour'>DATEDIFF(hour,%2,%3)</formula>
      <formula part='minute'>DATEDIFF(minute,%2,%3)</formula>
      <formula part='second'>DATEDIFF(second,%2,%3)</formula>
      <argument type='localstr' />
      <argument type='datetime' />
      <argument type='datetime' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
      <formula part='year'>DATEDIFF(year,%2,%3)</formula>
      <formula part='quarter'>DATEDIFF(quarter,%2,%3)</formula>
      <formula part='month'>DATEDIFF(month,%2,%3)</formula>
      <formula part='dayofyear'>DATEDIFF(dayofyear,%2,%3)</formula>
      <formula part='day'>DATEDIFF(day,%2,%3)</formula>
      <formula part='weekday'>DATEDIFF(day,%2,%3)</formula>
      <formula part='week'>DATEDIFF(week,%2,%3)</formula>
      <formula part='hour'>DATEDIFF(hour,%2,%3)</formula>
      <formula part='minute'>DATEDIFF(minute,%2,%3)</formula>
      <formula part='second'>DATEDIFF(second,%2,%3)</formula>
      <argument type='localstr' />
      <argument type='datetime' />
      <argument type='date' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
	  <formula>datediff(%1,case when datepart(dw,%2)=%4 and datepart(dw,trunc(%2::datetime,year)::date)=%4 or datepart(dw,%2)=%4 then dateadd(%1,-%4,%2) else %2 end,%3)</formula>
      <formula part='year'>DATEDIFF(year,%2,%3)</formula>
      <formula part='quarter'>DATEDIFF(quarter,%2,%3)</formula>
      <formula part='month'>DATEDIFF(month,%2,%3)</formula>
      <formula part='dayofyear'>DATEDIFF(dayofyear,%2,%3)</formula>
      <formula part='day'>DATEDIFF(day,%2,%3)</formula>
      <formula part='weekday'>DATEDIFF(day,%2,%3)</formula>
      <formula part='week'>datediff(%1,case when datepart(dw,%2)=%4 and datepart(dw,trunc(%2::datetime,year)::date)=%4 or datepart(dw,%2)=%4 then dateadd(%1,-%4,%2) else %2 end,%3)</formula>
      <formula part='hour'>DATEDIFF(hour,%2,%3)</formula>
      <formula part='minute'>DATEDIFF(minute,%2,%3)</formula>
      <formula part='second'>DATEDIFF(second,%2,%3)</formula>
      <argument type='localstr' />
      <argument type='date' />
      <argument type='datetime' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATEDIFF' return-type='int'>
	  <formula>datediff(%1,case when datepart(dw,%2)=%4 and datepart(dw,trunc(%2::datetime,year)::date)=%4 or datepart(dw,%2)=%4 then dateadd(%1,-%4,%2) when datepart(dw,%3)=1 then dateadd(%1,1,%2) else %2 end,%3)</formula>
      <formula part='year'>DATEDIFF(year,%2,%3)</formula>
      <formula part='quarter'>DATEDIFF(quarter,%2,%3)</formula>
      <formula part='month'>DATEDIFF(month,%2,%3)</formula>
      <formula part='dayofyear'>DATEDIFF(dayofyear,%2,%3)</formula>
      <formula part='day'>DATEDIFF(day,%2,%3)</formula>
      <formula part='weekday'>DATEDIFF(day,%2,%3)</formula>
      <formula part='week'>datediff(%1,case when datepart(dw,%2)=%4 and datepart(dw,trunc(%2::datetime,year)::date)=%4 or datepart(dw,%2)=%4 then dateadd(%1,-%4,%2) when datepart(dw,%3)=1 then dateadd(%1,1,%2) else %2 end,%3)</formula>
      <formula part='hour'>DATEDIFF(hour,%2,%3)</formula>
      <formula part='minute'>DATEDIFF(minute,%2,%3)</formula>
      <formula part='second'>DATEDIFF(second,%2,%3)</formula>
      <argument type='localstr' />
      <argument type='date' />
      <argument type='date' />
      <argument type='localstr' />
    </date-function>
        <date-function name='DATENAME' return-type='str'>
      <formula>DATEPART(%1, %2)::INT</formula>
      <formula part='year'>DATEPART(%1, %2)::INT</formula>
      <formula part='quarter'>DATEPART(%1, %2)::INT</formula>
      <formula part='month'>DATEPART(%1, %2)::INT</formula>
      <formula part='dayofyear'>DATEPART(%1, %2)::INT</formula>
      <formula part='day'>DATEPART(%1, %2)::INT</formula>
      <formula part='weekday'>CASE WHEN DATEPART(%1, %2) = 1 THEN 'Sunday' WHEN DATEPART(%1, %2) = 2 THEN 'Monday' WHEN DATEPART(%1, %2) = 3 THEN 'Tuesday' WHEN DATEPART(%1, %2) = 4 THEN 'Wednesday' WHEN DATEPART(%1, %2) = 5 THEN 'Thursday' WHEN DATEPART(%1, %2) = 6 THEN 'Friday' WHEN DATEPART(%1, %2) = 7 THEN 'Saturday' ELSE NULL END</formula>
      <formula part='week'>DATEPART(%1, %2)::INT</formula>
      <formula part='hour'>DATEPART(%1, %2)::INT</formula>
      <formula part='minute'>DATEPART(%1, %2)::INT</formula>
      <formula part='second'>DATEPART(%1, %2)::INT</formula>
      <argument type='localstr' />
      <argument type='datetime' />
    </date-function>
    <date-function name='DATENAME' return-type='str'>
      <formula>DATEPART(%1, %2)::INT</formula>
      <formula part='year'>DATEPART(%1, %2)::INT</formula>
      <formula part='quarter'>DATEPART(%1, %2)::INT</formula>
      <formula part='month'>DATEPART(%1, %2)::INT</formula>
      <formula part='dayofyear'>DATEPART(%1, %2)::INT</formula>
      <formula part='day'>DATEPART(%1, %2)::INT</formula>
      <formula part='weekday'>CASE WHEN DATEPART(%1, %2) = 1 THEN 'Sunday' WHEN DATEPART(%1, %2) = 2 THEN 'Monday' WHEN DATEPART(%1, %2) = 3 THEN 'Tuesday' WHEN DATEPART(%1, %2) = 4 THEN 'Wednesday' WHEN DATEPART(%1, %2) = 5 THEN 'Thursday' WHEN DATEPART(%1, %2) = 6 THEN 'Friday' WHEN DATEPART(%1, %2) = 7 THEN 'Saturday' ELSE NULL END</formula>
      <formula part='week'>DATEPART(%1, %2)::INT</formula>
      <formula part='hour'>DATEPART(%1, %2)::INT</formula>
      <formula part='minute'>DATEPART(%1, %2)::INT</formula>
      <formula part='second'>DATEPART(%1, %2)::INT</formula>
      <argument type='localstr' />
      <argument type='date' />
    </date-function>
    <date-function name='DATENAME' return-type='str'>
      <formula>DATEPART(%1, %2)::INT</formula>
      <formula part='year'>DATEPART(%1, %2)::INT</formula>
      <formula part='quarter'>DATEPART(%1, %2)::INT</formula>
      <formula part='month'>DATEPART(%1, %2)::INT</formula>
      <formula part='dayofyear'>DATEPART(%1, %2)::INT</formula>
      <formula part='day'>DATEPART(%1, %2)::INT</formula>
      <formula part='weekday'>CASE WHEN (DATEPART(%1, %2) = 1 THEN 'Sunday' WHEN (DATEPART(%1, %2) = 2 THEN 'Monday' WHEN (DATEPART(%1, %2) = 3 THEN 'Tuesday' WHEN (DATEPART(%1, %2) = 4 THEN 'Wednesday' WHEN (DATEPART(%1, %2) = 5 THEN 'Thursday' WHEN (DATEPART(%1, %2) = 6 THEN 'Friday' ELSE 'Saturday' END</formula>
      <formula part='week'>DATEPART(%1, %2)::INT</formula>
      <formula part='hour'>DATEPART(%1, %2)::INT</formula>
      <formula part='minute'>DATEPART(%1, %2)::INT</formula>
      <formula part='second'>DATEPART(%1, %2)::INT</formula>
      <argument type='localstr' />
      <argument type='datetime' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATENAME' return-type='str'>
      <formula>CAST(DATEPART(%1, case when datepart(dw,%2)=1 and datepart(dw,trunc(%2,year)::date)=1 then %2 when datepart(dw,%2)=1 then dateadd(%1,-%3,%2) else %2 end) AS INT)</formula>
      <formula part='year'>DATEPART(%1, %2)::INT</formula>
      <formula part='quarter'>DATEPART(%1, %2)::INT</formula>
      <formula part='month'>DATEPART(%1, %2)::INT</formula>
      <formula part='dayofyear'>DATEPART(%1, %2)::INT</formula>
      <formula part='day'>DATEPART(%1, %2)::INT</formula>
      <formula part='weekday'>CASE WHEN (DATEPART(%1, %2) = 1 THEN 'Sunday' WHEN (DATEPART(%1, %2) = 2 THEN 'Monday' WHEN (DATEPART(%1, %2) = 3 THEN 'Tuesday' WHEN (DATEPART(%1, %2) = 4 THEN 'Wednesday' WHEN (DATEPART(%1, %2) = 5 THEN 'Thursday' WHEN (DATEPART(%1, %2) = 6 THEN 'Friday' ELSE 'Saturday' END</formula>
      <formula part='week'>CAST(DATEPART(%1, case when datepart(dw,%2)=1 and datepart(dw,trunc(%2,year)::date)=1 then %2 when datepart(dw,%2)=1 then dateadd(%1,-%3,%2) else %2 end) AS INT)</formula>
      <formula part='hour'>DATEPART(%1, %2)::INT</formula>
      <formula part='minute'>DATEPART(%1, %2)::INT</formula>
      <formula part='second'>DATEPART(%1, %2)::INT</formula>
      <argument type='localstr' />
      <argument type='date' />
      <argument type='localstr' />
    </date-function>
    <!--date-function name='DATEPARSE' return-type='datetime'>
      <formula>TO_TIMESTAMP(%2, %1)</formula>
      <formula part='year'>TO_TIMESTAMP(%1, &apos;&apos;)</formula>
      <formula part='quarter'>TO_TIMESTAMP(%1, &apos;&apos;)</formula>
      <formula part='month'>TO_TIMESTAMP(%1, &apos;&apos;)</formula>
      <formula part='dayofyear'>TO_TIMESTAMP(%1, &apos;&apos;)</formula>
      <formula part='day'>TO_TIMESTAMP(%1, &apos;FMDDAMYYYY&apos;)</formula>
      <formula part='weekday'>TO_TIMESTAMP(%1, &apos;&apos;)</formula>
      <formula part='week'>TO_TIMESTAMP(sunday, &apos;&apos;)</formula>
      <formula part='hour'>TO_TIMESTAMP(%1, &apos;&apos;)</formula>
      <formula part='minute'>TO_TIMESTAMP(%1, &apos;&apos;)</formula>
      <formula part='second'>TO_TIMESTAMP(%1, &apos;&apos;)</formula>
      <argument type='localstr' />
      <argument type='str' />
    </date-function-->
    <date-function name='DATEPART' return-type='int'>
      <formula>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='year'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='quarter'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='month'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='dayofyear'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='day'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='weekday'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='week'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='hour'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='minute'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='second'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <argument type='localstr' />
      <argument type='datetime' />
    </date-function>
    <date-function name='DATEPART' return-type='int'>
<formula>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='year'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='quarter'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='month'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='dayofyear'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='day'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='weekday'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='week'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='hour'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='minute'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='second'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <argument type='localstr' />
      <argument type='date' />
    </date-function>
    <date-function name='DATEPART' return-type='int'>
      <formula>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='year'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='quarter'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='month'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='dayofyear'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='day'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='weekday'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='week'>CAST(DATEPART(%1, case when datepart(dw,%2)=1 and datepart(dw,trunc(%2,year)::date)=1 then %2 when datepart(dw,%2)=1 then dateadd(%1,-%3,%2) else %2 end) AS INTEGER)</formula>
      <formula part='hour'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='minute'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='second'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <argument type='localstr' />
      <argument type='datetime' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATEPART' return-type='int'>
      <formula>CAST(DATEPART(%1, case when datepart(dw,%2)=1 and datepart(dw,trunc(%2,year)::date)=1 then %2 when datepart(dw,%2)=1 then dateadd(%1,-%3,%2) else %2 end) AS INTEGER)</formula>
      <formula part='year'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='quarter'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='month'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='dayofyear'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='day'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='weekday'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='week'>CAST(DATEPART(%1, case when datepart(dw,%2)=1 and datepart(dw,trunc(%2,year)::date)=1 then %2 when datepart(dw,%2)=1 then dateadd(%1,-%3,%2) else %2 end) AS INTEGER)</formula>
      <formula part='hour'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='minute'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <formula part='second'>CAST(DATEPART(%1, %2) AS INTEGER)</formula>
      <argument type='localstr' />
      <argument type='date' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATETRUNC' return-type='datetime'>
      <formula>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='year'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='quarter'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='month'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='dayofyear'>TRUNC(%2::DATETIME, day)</formula>
      <formula part='day'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='weekday'>TRUNC(%2::DATETIME, day)</formula>
      <formula part='week'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='hour'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='minute'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='second'>TRUNC(%2::DATETIME, %1)</formula>
      <argument type='localstr' />
      <argument type='datetime' />
    </date-function>
    <date-function name='DATETRUNC' return-type='datetime'>
      <formula>TRUNC(CAST(%2 AS DATETIME), %1 )</formula>
	  <formula part='year'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='quarter'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='month'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='dayofyear'>TRUNC(%2::DATETIME, day)</formula>
      <formula part='day'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='weekday'>TRUNC(%2::DATETIME, day)</formula>
      <formula part='week'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='hour'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='minute'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='second'>TRUNC(%2::DATETIME, %1)</formula>
      <argument type='localstr' />
      <argument type='date' />
    </date-function>
    <date-function name='DATETRUNC' return-type='datetime'>
      <formula>case when %3 = 1 then dateadd(day,1,TRUNC(dateadd(day,-1,%2::DATETIME), %1)) else TRUNC(%2::DATETIME, %1) end</formula>
	  <formula part='year'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='quarter'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='month'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='dayofyear'>TRUNC(%2::DATETIME, day)</formula>
      <formula part='day'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='weekday'>TRUNC(%2::DATETIME, day)</formula>
      <formula part='week'>case when %3=1 then dateadd(day,1,TRUNC(dateadd(day,-1,%2::DATETIME), %1)) else TRUNC(%2::DATETIME, %1) end</formula>
      <formula part='hour'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='minute'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='second'>TRUNC(%2::DATETIME, %1)</formula>
      <argument type='localstr' />
      <argument type='datetime' />
      <argument type='localstr' />
    </date-function>
    <date-function name='DATETRUNC' return-type='datetime'>
      <formula>case when %3 = 1 then dateadd(day,1,TRUNC(dateadd(day,-1,%2::DATETIME), %1)) else TRUNC(%2::DATETIME, %1) end</formula>
	  <formula part='year'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='quarter'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='month'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='dayofyear'>TRUNC(%2::DATETIME, day)</formula>
      <formula part='day'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='weekday'>TRUNC(%2::DATETIME, day)</formula>
      <formula part='week'>case when %3=1 then dateadd(day,1,TRUNC(dateadd(day,-1,%2::DATETIME), %1)) else TRUNC(%2::DATETIME, %1) end</formula>
      <formula part='hour'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='minute'>TRUNC(%2::DATETIME, %1)</formula>
      <formula part='second'>TRUNC(%2::DATETIME, %1)</formula>
      <argument type='localstr' />
      <argument type='date' />
      <argument type='localstr' />
    </date-function>
  </function-map>
  <sql-format>
	<id-allowed-characters value='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_' />
  </sql-format>
 </dialect>
 
 
 
 
 
 
 
 
 
 
 
 
 
 